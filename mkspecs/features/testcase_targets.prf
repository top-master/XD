
# Let every project have a standard GNU `check' target
!contains(QMAKE_EXTRA_TARGETS, check) {
    contains(TEMPLATE, subdirs) {
        prepareRecursiveTarget(check)
        # TRACE/testlib note: the `TEMPLATE=subdirs` Makefile's check target generates sub-Makefiles
        # (if not already exist), hence there is no need for:
        # ```
        # check.depends *= first
        # ```
    } else {
        check.depends *= first # `make check' implies build
    }
    QMAKE_EXTRA_TARGETS += check
}

# ... and the same for benchmarks, too.
!contains(QMAKE_EXTRA_TARGETS, benchmark) {
    contains(TEMPLATE, subdirs): \
        prepareRecursiveTarget(benchmark)

    benchmark.depends *= first # `make benchmark' implies build
    QMAKE_EXTRA_TARGETS += benchmark
}

